plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
}


ext {
    set('springCloudVersion', "2023.0.1")
}

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    implementation project(':common')

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    runtimeOnly  'com.mysql:mysql-connector-j'
    testRuntimeOnly 'com.mysql:mysql-connector-j'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testImplementation platform("org.testcontainers:testcontainers-bom:1.20.2")
    testImplementation "org.testcontainers:mysql"
    testImplementation "org.testcontainers:jdbc"
    testImplementation "org.testcontainers:junit-jupiter"

    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    // QueryDSL JPA Jakarta
    implementation       'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'

    // Jakarta Persistence API
    compileOnly          'jakarta.persistence:jakarta.persistence-api:3.1.0'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'

    // Spring Kafka 핵심
    implementation 'org.springframework.kafka:spring-kafka'


}
// Gradle 7+ 기본 generated 위치를 소스 루트로 추가
sourceSets {
    main {
        java {
            srcDirs += "$buildDir/generated/sources/annotationProcessor/java/main"
        }
    }
}

tasks.named("clean") {
    doLast {
        delete "$buildDir/generated"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}


